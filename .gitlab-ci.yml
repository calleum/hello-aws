image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  SPRING_PROFILES_ACTIVE: gitlab-ci
  CONTAINER_IMAGE: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

stages:
  - pre-build
  - build
  - package
  - deploy

hello:
  stage: pre-build
  script: "printenv"

maven-build:
  image: $CI_REGISTRY_IMAGE/build/maven-sync:latest
  stage: build
  cache:
    paths:
      - .m2/repository
  script: "mvn ${MAVEN_OPTS} package -B"
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: package
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker build -t $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE .
  - docker push $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE

k8s-deploy:
  stage: deploy
  image: asorour/docker-aws-cli
  services:
      - docker:dind
  variables:
      DOCKER_DRIVER: overlay2
      HELM_EXPERIMENTAL_OCI: 1
  script:
    - apk add --no-cache \
        python3 \
        py3-pip \
        && pip3 install --upgrade pip \
        && pip3 install \
        awscli \
        && rm -rf /var/cache/apk/*
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
    - kubectl config use-context default
    - kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.5/aio/deploy/recommended.yaml
    - kubectl apply -f eks-admin-service-account.yaml
    - kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')
    - kubectl proxy
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com/
    - helm repo update
    - helm install nginx-ingress stable/nginx-ingress -f nginx-ingress-values.yaml -n kube-system
    - helm upgrade hello-aws ./ --install --set image.tag=${CI_COMMIT_SHORT_SHA}

build-docker-image:
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  stage: build
  image: "docker:latest"
  cache:
    paths:
      - .m2/repository

  script:
    - wget -O Dockerfile ${CI_PROJECT_URL}/raw/${CI_COMMIT_BRANCH}/maven-dep-dockerfile
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/build/maven-sync:latest .
    - docker push $CI_REGISTRY_IMAGE/build/maven-sync:latest
  when: manual
